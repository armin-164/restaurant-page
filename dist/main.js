(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap);"]),a.push([n.id,'body {\r\n    margin: 0;\r\n    font-family: "Quicksand", sans-serif;\r\n}\r\n\r\n.header-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: rgb(58, 57, 57);\r\n    color: white;\r\n}\r\n\r\n.header-links-list {\r\n    display:flex;\r\n    gap: 20px;\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n#content {\r\n    display: grid;\r\n    grid-template-columns: 4fr 1fr 4fr;\r\n    grid-template-rows: minmax(100px, 150px) 1fr 4fr;\r\n}\r\n\r\n\r\n.header-container {\r\n    grid-column: 1 / 5;\r\n}\r\n\r\n\r\n\r\n.main-container {\r\n    height: 100vh;\r\n    grid-column: 1 / 4;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n.main-background-img {\r\n    width: 100%;\r\n    grid-column: 1 / -1;\r\n    \r\n}\r\n\r\n.main-content {\r\n    padding: 100px;\r\n    background-color: rgb(107, 107, 107);\r\n    grid-column: 2 / 4;\r\n    align-self: flex-start;\r\n    margin-top: 40px;\r\n}\r\n\r\n.main-background-img, .main-content {\r\n    grid-row: 1 / 2;\r\n}\r\n\r\n.text-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n\r\n.promo-container > button {\r\n    padding: 10px 30px;\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    border-radius: 10px;\r\n    color: white;\r\n    background-color: rgb(255, 25, 25);\r\n}\r\n\r\n.promo-container {\r\n    text-align: center;\r\n}\r\n\r\n.info-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,iCAAiC;IACjC,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,kCAAkC;IAClC,gDAAgD;AACpD;;;AAGA;IACI,kBAAkB;AACtB;;;;AAIA;IACI,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,qCAAqC;AACzC;;AAEA;IACI,WAAW;IACX,mBAAmB;;AAEvB;;AAEA;IACI,cAAc;IACd,oCAAoC;IACpC,kBAAkB;IAClB,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;IACZ,kCAAkC;AACtC;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');\r\n\r\nbody {\r\n    margin: 0;\r\n    font-family: \"Quicksand\", sans-serif;\r\n}\r\n\r\n.header-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: rgb(58, 57, 57);\r\n    color: white;\r\n}\r\n\r\n.header-links-list {\r\n    display:flex;\r\n    gap: 20px;\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n#content {\r\n    display: grid;\r\n    grid-template-columns: 4fr 1fr 4fr;\r\n    grid-template-rows: minmax(100px, 150px) 1fr 4fr;\r\n}\r\n\r\n\r\n.header-container {\r\n    grid-column: 1 / 5;\r\n}\r\n\r\n\r\n\r\n.main-container {\r\n    height: 100vh;\r\n    grid-column: 1 / 4;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n.main-background-img {\r\n    width: 100%;\r\n    grid-column: 1 / -1;\r\n    \r\n}\r\n\r\n.main-content {\r\n    padding: 100px;\r\n    background-color: rgb(107, 107, 107);\r\n    grid-column: 2 / 4;\r\n    align-self: flex-start;\r\n    margin-top: 40px;\r\n}\r\n\r\n.main-background-img, .main-content {\r\n    grid-row: 1 / 2;\r\n}\r\n\r\n.text-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n\r\n.promo-container > button {\r\n    padding: 10px 30px;\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    border-radius: 10px;\r\n    color: white;\r\n    background-color: rgb(255, 25, 25);\r\n}\r\n\r\n.promo-container {\r\n    text-align: center;\r\n}\r\n\r\n.info-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],d=t.base?s[0]+t.base:s[0],l=i[d]||0,p="".concat(d," ").concat(l);i[d]=l+1;var u=r(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var m=o(A,t);t.byIndex=c,e.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=r(i[a]);e[c].references--}for(var s=t(n,o),d=0;d<i.length;d++){var l=r(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.nc=void 0,(()=>{const n=r.p+"2060d4ddf25c06bab5c2.jpg",e=e=>{const r=document.createElement("div");r.classList="main-container";const t=document.createElement("img");t.src=n,t.classList="main-background-img",r.appendChild(t);const o=document.createElement("div");return o.classList="main-content",o.appendChild(e),r.appendChild(o),r},t=()=>{const n=document.createElement("div");n.classList="text-container";const e=document.createElement("div");e.classList="promo-container";const r=document.createElement("h2");r.innerText="Savor the Flavor here at The Italian Place";const t=document.createElement("p");t.innerText="Delicious food at w prices";const o=document.createElement("button");return o.classList="order-button",o.innerText="Order Now",r.appendChild(t),e.appendChild(r),e.appendChild(o),n.appendChild(e),n.appendChild(function(){const n=document.createElement("div");n.classList="info-container";const e=document.createElement("div");e.innerText="Mon-Thurs:8am-8pm \n Fri-Sun:8am-11pm";const r=document.createElement("div");return r.innerText="2025 S Washington Ave \n Lansing Charter Township",n.append(e,r),n}()),n};function o(n){const e=document.createElement("span");return e.innerText=`${n} $`,e}var i=r(379),a=r.n(i),c=r(795),s=r.n(c),d=r(569),l=r.n(d),p=r(565),u=r.n(p),A=r(216),m=r.n(A),f=r(589),h=r.n(f),g=r(426),C={};C.styleTagTransform=h(),C.setAttributes=u(),C.insert=l().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=m(),a()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals,(n=>{const r=document.getElementById("content");r.appendChild((()=>{const n=document.createElement("div");n.classList="header-container";const e=document.createElement("h1");e.classList="header-title",e.innerText="Welcome to my restaurant",n.appendChild(e);const r=document.createElement("div");r.classList="header-links-container";const t=document.createElement("ul");return t.classList="header-links-list",n.appendChild(r),r.appendChild(t),["Home","Menu","About"].forEach((n=>{const e=document.createElement("li");e.innerText=n,t.appendChild(e)})),n})()),r.appendChild(e(n))})(t()),document.querySelectorAll("li").forEach((n=>{n.addEventListener("click",(()=>{const r=document.querySelector("#content");"Home"===n.innerText?(r.removeChild(r.children[1]),r.appendChild(e(t()))):"Menu"===n.innerText?(r.removeChild(r.children[1]),r.appendChild(e(function(){const n=document.createElement("div"),e=document.createElement("div");e.classList="food-price-div";const r=["Hamburger","Kebabpizza","Pasta","Sushi"],t=["2.99","8.99","4.99","3.99"];for(let n=0;n<r.length&&n<t.length;n++){const i=document.createElement("p");i.innerText=r[n],i.appendChild(o(t[n])),e.appendChild(i)}return n.appendChild(e),n}()))):"About"===n.innerText&&(r.removeChild(r.children[1]),r.appendChild(e(function(){const n=document.createElement("div"),e=document.createElement("h2");e.innerText="About Us";const r=document.createElement("p");return r.innerText="Welcome to our restaurant, where we serve delicious hamburgers, kebab pizzas, pastas, and sushi. We're committed to using high-quality ingredients and providing great service at affordable prices. Our menu offers something for everyone, with fresh, tasty options that are sure to satisfy. Come visit us today and taste the difference!",n.append(e,r),n}())))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,